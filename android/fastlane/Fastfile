# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.7.0"

default_platform :android

platform :android do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  lane :bump_version_code do
    path = '../app/build.gradle'
    re = /versionCode\s+(\d+)/

    s = File.read(path)
    versionCode = s[re, 1].to_i
    puts "Current version code is " + versionCode.to_s
    s[re, 1] = (versionCode + 1).to_s

    f = File.new(path, 'w')
    f.write(s)
    f.close
    puts "Version code is now bump to " + (versionCode + 1).to_s + " ðŸš€"
  end

  lane :input_version_name do
    path = '../app/build.gradle'
    re = /versionName\s+("\d\.\d\.\d")/

    s = File.read(path)
    currentVersion = s[re, 1].to_s
    versionName = prompt(text: "Current version name is " + currentVersion + ". Enter new version name without quotes (eg. x.y.z): ")
    s[re, 1] = '"' + versionName.to_s + '"'

    f = File.new(path, 'w')
    f.write(s)
    f.close
    puts "Version name is now updated to " + versionName + " ðŸš€"
  end

  desc "Submit a new Alpha Build to Google Play Store"
  lane :alpha do
    bump_version_code
    input_version_name
    gradle(
      task: 'assemble',
      build_type: 'Release'
    )
    supply(track: 'alpha')
    notification(subtitle: "Submitted ALPHA build to Google Play Store", message: "Success ðŸŽ‰")
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Submit a new Beta Build to Google Play Store"
  lane :beta do
    bump_version_code
    input_version_name
    gradle(
      task: 'assemble',
      build_type: 'Release'
    )
    supply(track: 'beta')
    notification(subtitle: "Submitted BETA build to Google Play Store", message: "Success ðŸŽ‰")
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(
      task: 'assemble',
      build_type: 'Release'
    )
    bump_version_code
    input_version_name
    supply
    notification(subtitle: "Submitted Production build to Google Play Store", message: "Success ðŸŽ‰")
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used
# No personal data is sent or shared. Learn more at https://github.com/fastlane/enhancer
